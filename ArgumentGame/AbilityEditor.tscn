[gd_scene load_steps=17 format=2]

[ext_resource path="res://Assets/GridSprites.tres" type="GridSpriteSettings" id=1]
[ext_resource path="res://Assets/UI/FontAwesome/svgs/solid/download.png" type="Texture" id=2]
[ext_resource path="res://Assets/UI/FontAwesome/svgs/solid/save.png" type="Texture" id=3]
[ext_resource path="res://Assets/UI/Themes/CardEditorTheme.tres" type="Theme" id=4]
[ext_resource path="res://Assets/Fonts/CardEditorLabelFont.ttf" type="DynamicFontData" id=5]

[sub_resource type="CardEditorGridController" id=1]

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0 )
colors = PoolColorArray( 0.196078, 0.231373, 0.309804, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="ViewportTexture" id=4]
viewport_path = NodePath("ViewportContainer/Viewport")

[sub_resource type="DynamicFont" id=5]
size = 20
outline_size = 1
outline_color = Color( 0, 0, 0, 1 )
font_data = ExtResource( 5 )

[sub_resource type="GDScript" id=6]
script/source = "extends Button

# Declare member variables here.

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func _on_Save_pressed():
	var saveDialog : FileDialog = get_node(\"/root/Control/SaveButton/SaveDialog\")
	saveDialog.popup_centered()
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=7]
script/source = "extends FileDialog

# Declare member variables here. Examples:
onready var grid : GameGrid = get_node(\"/root/Control/ViewportContainer/Viewport/GridNode\")
onready var cardLabel : RichTextLabel = get_node(\"/root/Control/CardViewportContainer/Viewport/CardLabel\")
onready var cardNameBox : TextEdit = get_node(\"/root/Control/CardName\")
onready var viewport : Viewport = get_node(\"/root/Control/CardViewportContainer/Viewport\")

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass


func _on_SaveDialog_about_to_show():
	grid.get_gridController().toggle_acceptingInput(false)
	pass # Replace with function body.


func _on_SaveDialog_popup_hide():
	grid.get_gridController().toggle_acceptingInput(true)
	pass # Replace with function body.


func _on_SaveDialog_confirmed():
	_saveCard()
	pass # Replace with function body.


func _on_SaveDialog_file_selected(path):
	_saveCard()
	pass # Replace with function body.
	
func _saveCard():
	var cardRef : Card = grid.get_gridController().get_CardRef()
	cardRef.resolveNameAndDeckFromPath(current_path)
	if(cardNameBox.get_text().length() > 0):
		cardRef.set_Name(cardNameBox.get_text())
	cardLabel.set_bbcode(cardRef.get_DescriptionBBCode())
	yield(get_tree().create_timer(0.1), \"timeout\")
	cardRef.set_Texture(viewport.get_texture())
	grid.get_gridController().saveCard(current_path)
	pass
"

[sub_resource type="GDScript" id=8]
script/source = "extends Button

# Declare member variables here. Examples:

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func _on_Load_pressed():
	var loadDialog : FileDialog = get_node(\"/root/Control/LoadButton/LoadDialog\")
	loadDialog.popup_centered()
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=9]
script/source = "extends FileDialog

# Declare member variables here. Examples:
onready var grid : GameGrid = get_node(\"/root/Control/ViewportContainer/Viewport/GridNode\")
onready var cardLabel : RichTextLabel = get_node(\"/root/Control/CardViewportContainer/Viewport/CardLabel\")
onready var cardTypeLabel : Label = get_node(\"/root/Control/CardType\")
onready var cardNameBox : TextEdit = get_node(\"/root/Control/CardName\")

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func _on_LoadDialog_popup_hide():
	grid.get_gridController().toggle_acceptingInput(true)
	pass # Replace with function body.


func _on_LoadDialog_about_to_show():
	grid.get_gridController().toggle_acceptingInput(false)
	pass # Replace with function body.


func _on_LoadDialog_confirmed():
	_loadCard()
	pass # Replace with function body.


# warning-ignore:unused_argument
func _on_LoadDialog_file_selected(path):
	_loadCard()
	pass # Replace with function body.

func _loadCard():
	var GridRef : CardEditorGridController = grid.get_gridController()
	GridRef.loadCard(current_path)
	var CardRef : Card = GridRef.get_CardRef()
	GridRef.set_CardType(CardRef.get_CardType())
	cardNameBox.set_text(CardRef.get_Name())
	cardLabel.set_bbcode(CardRef.get_DescriptionBBCode())
	cardTypeLabel._updateText()
	pass"

[sub_resource type="GDScript" id=10]
script/source = "extends RichTextLabel

# Declare member variables here. Examples:
onready var grid : GameGrid = get_node(\"/root/Control/ViewportContainer/Viewport/GridNode\") 

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _input(var event : InputEvent):
	if (event.is_action(\"card_editor_card_type_next\") || event.is_action(\"card_editor_card_type_prev\")):
		print(event)
		_updateText()
	pass
		

func _updateText():
	var cardType : int = grid.get_gridController().get_CardType()
	var cardTypeString : String
	match cardType:
		0: cardTypeString = \"Argument\"
		1: cardTypeString = \"Counter Arg\"
		2: cardTypeString = \"Special\"
	text = \"Tab to Change card type - \" + cardTypeString
	pass"

[sub_resource type="GDScript" id=11]
script/source = "extends RichTextLabel

# Declare member variables here. Examples:
onready var grid : GameGrid = get_node(\"/root/Control/ViewportContainer/Viewport/GridNode\") 

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func _input(var event : InputEvent):
	if (event.is_action(\"argument_grid_state_next\") || event.is_action(\"argument_grid_state_prev\")):
		var turn : int = grid.get_gridController().get_Turn()
		var turnString : String
		match turn:
			0: turnString = \"Turn 1\"
			1: turnString = \"Turn 2\"
			2: turnString = \"Turn 3\"
			3: turnString = \"Turn 4\"
		text = \"Tab to Change turn - \" + turnString
		
"

[node name="Control" type="Control"]
margin_right = 1024.0
margin_bottom = 640.0
focus_mode = 1
theme = ExtResource( 4 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
margin_right = 448.947
margin_bottom = 495.562
grow_horizontal = 2
grow_vertical = 2
stretch = true

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 448, 495 )
handle_input_locally = false
usage = 0
render_target_update_mode = 3

[node name="GridNode" type="GameGrid" parent="ViewportContainer/Viewport"]
GridSize = Vector2( 7, 7 )
GridTexture = ExtResource( 1 )
GridController = SubResource( 1 )

[node name="CardViewportContainer" type="ViewportContainer" parent="."]
margin_left = 600.0
margin_top = 100.0
margin_right = 850.0
margin_bottom = 450.0
rect_scale = Vector2( 1, -1 )
rect_pivot_offset = Vector2( 0, 175 )
mouse_filter = 2

[node name="Viewport" type="Viewport" parent="CardViewportContainer"]
size = Vector2( 250, 350 )
handle_input_locally = false
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="Background" type="TextureRect" parent="CardViewportContainer/Viewport"]
margin_right = 250.0
margin_bottom = 350.0
mouse_filter = 2
texture = SubResource( 3 )
expand = true

[node name="GridState" type="TextureRect" parent="CardViewportContainer/Viewport"]
margin_left = 12.0
margin_top = 12.0
margin_right = 237.0
margin_bottom = 237.0
grow_horizontal = 0
grow_vertical = 0
mouse_filter = 2
size_flags_horizontal = 0
size_flags_vertical = 0
texture = SubResource( 4 )
expand = true
stretch_mode = 1
flip_v = true

[node name="CardLabel" type="RichTextLabel" parent="CardViewportContainer/Viewport"]
margin_left = 12.0
margin_top = 260.0
margin_right = 237.0
margin_bottom = 338.0
mouse_filter = 2
custom_fonts/normal_font = SubResource( 5 )
bbcode_enabled = true
bbcode_text = "[center]FOO

BAR[/center]"
text = "FOO

BAR"
scroll_active = false

[node name="SaveButton" type="Button" parent="."]
margin_left = 500.0
margin_top = 530.0
margin_right = 697.0
margin_bottom = 585.0
text = "Save Card"
icon = ExtResource( 2 )
script = SubResource( 6 )

[node name="SaveDialog" type="FileDialog" parent="SaveButton"]
margin_left = -516.794
margin_top = -374.178
margin_right = 505.206
margin_bottom = 242.822
window_title = "Save Card"
resizable = true
current_dir = "res://Assets/CardPrefabs"
current_file = "CardName.res"
current_path = "res://Assets/CardPrefabs/CardName.res"
script = SubResource( 7 )

[node name="LoadButton" type="Button" parent="."]
margin_left = 750.0
margin_top = 530.0
margin_right = 949.0
margin_bottom = 586.0
text = "Load Card"
icon = ExtResource( 3 )
script = SubResource( 8 )

[node name="LoadDialog" type="FileDialog" parent="LoadButton"]
margin_left = -740.438
margin_top = -372.438
margin_right = 276.562
margin_bottom = 245.562
popup_exclusive = true
window_title = "Open a File"
resizable = true
mode = 0
show_hidden_files = true
current_dir = "res://Assets/CardPrefabs"
current_path = "res://Assets/CardPrefabs/"
script = SubResource( 9 )

[node name="CardType" type="RichTextLabel" parent="."]
margin_left = 25.3087
margin_top = 526.281
margin_right = 626.309
margin_bottom = 561.281
mouse_filter = 2
text = "Tab to Change card type - Argument"
script = SubResource( 10 )

[node name="Turn" type="RichTextLabel" parent="."]
margin_left = 27.1339
margin_top = 565.0
margin_right = 583.134
margin_bottom = 602.0
mouse_filter = 2
text = "Scroll to Change turn - Turn 1"
script = SubResource( 11 )

[node name="CardName" type="TextEdit" parent="."]
margin_left = 509.0
margin_top = 25.0
margin_right = 953.0
margin_bottom = 65.0
[connection signal="pressed" from="SaveButton" to="SaveButton" method="_on_Save_pressed"]
[connection signal="about_to_show" from="SaveButton/SaveDialog" to="SaveButton/SaveDialog" method="_on_SaveDialog_about_to_show"]
[connection signal="confirmed" from="SaveButton/SaveDialog" to="SaveButton/SaveDialog" method="_on_SaveDialog_confirmed"]
[connection signal="file_selected" from="SaveButton/SaveDialog" to="SaveButton/SaveDialog" method="_on_SaveDialog_file_selected"]
[connection signal="popup_hide" from="SaveButton/SaveDialog" to="SaveButton/SaveDialog" method="_on_SaveDialog_popup_hide"]
[connection signal="pressed" from="LoadButton" to="LoadButton" method="_on_Load_pressed"]
[connection signal="about_to_show" from="LoadButton/LoadDialog" to="LoadButton/LoadDialog" method="_on_LoadDialog_about_to_show"]
[connection signal="confirmed" from="LoadButton/LoadDialog" to="LoadButton/LoadDialog" method="_on_LoadDialog_confirmed"]
[connection signal="file_selected" from="LoadButton/LoadDialog" to="LoadButton/LoadDialog" method="_on_LoadDialog_file_selected"]
[connection signal="popup_hide" from="LoadButton/LoadDialog" to="LoadButton/LoadDialog" method="_on_LoadDialog_popup_hide"]
